name: Python Application CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with pylint
      run: |
        pylint src/ tests/

    - name: Test with unittest
      run: |
        python -m unittest discover tests

    - name: Build and push Docker image
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: nidhimaa/calculator-app:latest
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

name: Python Application CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with pylint
      run: |
        pylint src/ tests/

    - name: Test with unittest
      run: |
        python -m unittest discover tests

    - name: Build and push Docker image
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: yourusername/calculator-app
        tags: latest

    - name: Simulate Jira update
      run: |
        python jira/jira_integration.py

    - name: Prepare Kubernetes deployment
      run: |
        echo "In a real environment, this would deploy to Kubernetes"
        cat kubernetes/deployment.yaml

    - name: Prepare Ansible deployment
      run: |
        echo "In a real environment, this would use Ansible for configuration management"
        cat ansible/playbook.yml
